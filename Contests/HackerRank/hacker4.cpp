<<<<<<< HEAD
#include<iostream>
#include<stdint.h>
using namespace std;
uint64_t digit[]={4LL,40LL,44LL,400LL,440LL,444LL,4000LL,4400LL,4440LL,4444LL,40000LL,44000LL,44400LL,44440LL,44444LL,400000LL,440000LL,444000LL,444400LL,444440LL,444444LL,4000000LL,4400000LL,4440000LL,4444000LL,4444400LL,4444440LL,4444444LL,40000000LL,44000000LL,44400000LL,44440000LL,44444000LL,44444400LL,44444440LL,44444444LL,400000000LL,440000000LL,444000000LL,444400000LL,444440000LL,444444000LL,444444400LL,444444440LL,444444444LL,4000000000LL,4400000000LL,4440000000LL,4444000000LL,4444400000LL,4444440000LL,4444444000LL,4444444400LL,4444444440LL,4444444444LL,40000000000LL,44000000000LL,44400000000LL,44440000000LL,44444000000LL,44444400000LL,44444440000LL,44444444000LL,44444444400LL,44444444440LL,44444444444LL,400000000000LL,440000000000LL,444000000000LL,444400000000LL,444440000000LL,444444000000LL,444444400000LL,444444440000LL,444444444000LL,444444444400LL,444444444440LL,444444444444LL,4000000000000LL,4400000000000LL,4440000000000LL,4444000000000LL,4444400000000LL,4444440000000LL,4444444000000LL,4444444400000LL,4444444440000LL,4444444444000LL,4444444444400LL,4444444444440LL,4444444444444LL,40000000000000LL,44000000000000LL,44400000000000LL,44440000000000LL,44444000000000LL,44444400000000LL,44444440000000LL,44444444000000LL,44444444400000LL,44444444440000LL,44444444444000LL,44444444444400LL,44444444444440LL,44444444444444LL,400000000000000LL,440000000000000LL,444000000000000LL,444400000000000LL,444440000000000LL,444444000000000LL,444444400000000LL,444444440000000LL,444444444000000LL,444444444400000LL,444444444440000LL,444444444444000LL,444444444444400LL,444444444444440LL,444444444444444LL,4000000000000000LL,4400000000000000LL,4440000000000000LL,4444000000000000LL,4444400000000000LL,4444440000000000LL,4444444000000000LL,4444444400000000LL,4444444440000000LL,4444444444000000LL,4444444444400000LL,4444444444440000LL,4444444444444000LL,4444444444444400LL,4444444444444440LL,4444444444444444LL,40000000000000000LL,44000000000000000LL,44400000000000000LL,44440000000000000LL,44444000000000000LL,44444400000000000LL,44444440000000000LL,44444444000000000LL,44444444400000000LL,44444444440000000LL,44444444444000000LL,44444444444400000LL,44444444444440000LL,44444444444444000LL,44444444444444400LL,44444444444444440LL,44444444444444444LL,400000000000000000LL,440000000000000000LL,444000000000000000LL,444400000000000000LL,444440000000000000LL,444444000000000000LL,444444400000000000LL,444444440000000000LL,444444444000000000LL,444444444400000000LL,444444444440000000LL,444444444444000000LL,444444444444400000LL,444444444444440000LL,444444444444444000LL,444444444444444400LL,444444444444444440LL,444444444444444444LL,4000000000000000000LL,4400000000000000000LL,4440000000000000000LL,4444000000000000000LL,4444400000000000000LL,4444440000000000000LL,4444444000000000000LL,4444444400000000000LL,4444444440000000000LL,4444444444000000000LL,4444444444400000000LL,4444444444440000000LL,4444444444444000000LL,4444444444444400000LL,4444444444444440000LL,4444444444444444000LL,4444444444444444400LL,4444444444444444440LL,4444444444444444444LL};
int f[]={1,1,2,1,2,3,1,2,3,4,1,2,3,4,5,1,2,3,4,5,6,1,2,3,4,5,6,7,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};
int z[]={0,1,0,2,1,0,3,2,1,0,4,3,2,1,0,5,4,3,2,1,0,6,5,4,3,2,1,0,7,6,5,4,3,2,1,0,8,7,6,5,4,3,2,1,0,9,8,7,6,5,4,3,2,1,0,10,9,8,7,6,5,4,3,2,1,0,11,10,9,8,7,6,5,4,3,2,1,0,12,11,10,9,8,7,6,5,4,3,2,1,0,13,12,11,10,9,8,7,6,5,4,3,2,1,0,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0};
int main()
{
    uint64_t t,i,store,ct;
    uint64_t x;
    cin>>t;
    while(t--)
    {
        cin>>x;
        for(i=0;i<200;i++)
        {
            if(digit[i]%x==0&&x<=digit[i])
            {
               //cout<<digit[i]<<endl;
                store=i;
                break;
            }
        }
        ct=(2*f[store])+z[store];
        cout<<ct<<endl;
    }
return 0;
}

=======
#include<iostream>
#include<stdint.h>
using namespace std;
uint64_t digit[]={4LL,40LL,44LL,400LL,440LL,444LL,4000LL,4400LL,4440LL,4444LL,40000LL,44000LL,44400LL,44440LL,44444LL,400000LL,440000LL,444000LL,444400LL,444440LL,444444LL,4000000LL,4400000LL,4440000LL,4444000LL,4444400LL,4444440LL,4444444LL,40000000LL,44000000LL,44400000LL,44440000LL,44444000LL,44444400LL,44444440LL,44444444LL,400000000LL,440000000LL,444000000LL,444400000LL,444440000LL,444444000LL,444444400LL,444444440LL,444444444LL,4000000000LL,4400000000LL,4440000000LL,4444000000LL,4444400000LL,4444440000LL,4444444000LL,4444444400LL,4444444440LL,4444444444LL,40000000000LL,44000000000LL,44400000000LL,44440000000LL,44444000000LL,44444400000LL,44444440000LL,44444444000LL,44444444400LL,44444444440LL,44444444444LL,400000000000LL,440000000000LL,444000000000LL,444400000000LL,444440000000LL,444444000000LL,444444400000LL,444444440000LL,444444444000LL,444444444400LL,444444444440LL,444444444444LL,4000000000000LL,4400000000000LL,4440000000000LL,4444000000000LL,4444400000000LL,4444440000000LL,4444444000000LL,4444444400000LL,4444444440000LL,4444444444000LL,4444444444400LL,4444444444440LL,4444444444444LL,40000000000000LL,44000000000000LL,44400000000000LL,44440000000000LL,44444000000000LL,44444400000000LL,44444440000000LL,44444444000000LL,44444444400000LL,44444444440000LL,44444444444000LL,44444444444400LL,44444444444440LL,44444444444444LL,400000000000000LL,440000000000000LL,444000000000000LL,444400000000000LL,444440000000000LL,444444000000000LL,444444400000000LL,444444440000000LL,444444444000000LL,444444444400000LL,444444444440000LL,444444444444000LL,444444444444400LL,444444444444440LL,444444444444444LL,4000000000000000LL,4400000000000000LL,4440000000000000LL,4444000000000000LL,4444400000000000LL,4444440000000000LL,4444444000000000LL,4444444400000000LL,4444444440000000LL,4444444444000000LL,4444444444400000LL,4444444444440000LL,4444444444444000LL,4444444444444400LL,4444444444444440LL,4444444444444444LL,40000000000000000LL,44000000000000000LL,44400000000000000LL,44440000000000000LL,44444000000000000LL,44444400000000000LL,44444440000000000LL,44444444000000000LL,44444444400000000LL,44444444440000000LL,44444444444000000LL,44444444444400000LL,44444444444440000LL,44444444444444000LL,44444444444444400LL,44444444444444440LL,44444444444444444LL,400000000000000000LL,440000000000000000LL,444000000000000000LL,444400000000000000LL,444440000000000000LL,444444000000000000LL,444444400000000000LL,444444440000000000LL,444444444000000000LL,444444444400000000LL,444444444440000000LL,444444444444000000LL,444444444444400000LL,444444444444440000LL,444444444444444000LL,444444444444444400LL,444444444444444440LL,444444444444444444LL,4000000000000000000LL,4400000000000000000LL,4440000000000000000LL,4444000000000000000LL,4444400000000000000LL,4444440000000000000LL,4444444000000000000LL,4444444400000000000LL,4444444440000000000LL,4444444444000000000LL,4444444444400000000LL,4444444444440000000LL,4444444444444000000LL,4444444444444400000LL,4444444444444440000LL,4444444444444444000LL,4444444444444444400LL,4444444444444444440LL,4444444444444444444LL};
int f[]={1,1,2,1,2,3,1,2,3,4,1,2,3,4,5,1,2,3,4,5,6,1,2,3,4,5,6,7,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};
int z[]={0,1,0,2,1,0,3,2,1,0,4,3,2,1,0,5,4,3,2,1,0,6,5,4,3,2,1,0,7,6,5,4,3,2,1,0,8,7,6,5,4,3,2,1,0,9,8,7,6,5,4,3,2,1,0,10,9,8,7,6,5,4,3,2,1,0,11,10,9,8,7,6,5,4,3,2,1,0,12,11,10,9,8,7,6,5,4,3,2,1,0,13,12,11,10,9,8,7,6,5,4,3,2,1,0,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0};
int main()
{
    uint64_t t,i,store,ct;
    uint64_t x;
    cin>>t;
    while(t--)
    {
        cin>>x;
        for(i=0;i<200;i++)
        {
            if(digit[i]%x==0&&x<=digit[i])
            {
               //cout<<digit[i]<<endl;
                store=i;
                break;
            }
        }
        ct=(2*f[store])+z[store];
        cout<<ct<<endl;
    }
return 0;
}

>>>>>>> efd4245fe427ffeefe49c72470b81a015d8dcf82
